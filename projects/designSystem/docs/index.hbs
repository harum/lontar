<!-- https://zellwk.com/blog/rem-vs-em/ -->
<!-- https://medium.com/ -->
<!-- https://m.signalvnoise.com/ -->
<!-- https://about.gitlab.com/2019/07/01/using-ansible-and-gitlab-as-infrastructure-for-code/ -->

<!DOCTYPE html>
<html dir="ltr" lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Design System</title>
    <meta name="theme-color" content="#c73f29">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Minimal design system and style guide for
    my personal website">

    <link rel="stylesheet" media="all" href="/assets/css/main.css">
    <script type='module' src="/assets/js/modules/index.js"></script>
  </head>

  <body class="o-container o-container--medium o-page u-pad-h--xlarge">
    {{> header }}
    <main
      role="main"
      class="o-page__content"
    >
      <section>
        <article>
          <header>
            <time datetime="2018-05-26">2018-05-26</time>
            <h2 class="u-mrgn-top--0">
              <a href="/my-post.html">
                IIFE JavaScript
              </a>
            </h2>
          </header>

          <p>IIFE (Immediately-Invoked Function Expressions) produces a lexical scoping by using JavaScript's function scoping and it run as soon as it is defined</p>
        </article>
      </section>

      <section>
        <article>
          <header>
            <time datetime="2018-05-26">2018-05-26</time>
            <h2 class="u-mrgn-top--0">
              <a href="/my-post.html">
                Vue.js Parent-Child Components Communication
              </a>
            </h2>
          </header>
          <p>There are several component communication strategies in Vue.js. We can use parent-child communication, global event bus, and Vuex. They can be used according to problem that we want to solve.</p>
        </article>
      </section>
    </main>
    {{> footer }}

    <button class="c-scroll-top-button c-scroll-top-button--visible" id="scroll-top-button">
      <svg
        class="c-icon"
        x="0px"
        y="0px"
        viewBox="0 0 444.819 444.819"
        xml:space="preserve"
      >
      <g>
        <path
          style="fill:currentColor"
          d="M434.252,208.708L248.387,22.843c-7.042-7.043-15.693-10.564-25.977-10.564c-10.467,0-19.036,3.521-25.697,10.564
          L10.848,208.708C3.615,215.94,0,224.604,0,234.692c0,9.897,3.619,18.459,10.848,25.693l21.411,21.409
          c6.854,7.231,15.42,10.855,25.697,10.855c10.278,0,18.842-3.624,25.697-10.855l83.939-83.651v200.998
          c0,9.89,3.567,17.936,10.706,24.126c7.139,6.184,15.752,9.273,25.837,9.273h36.545c10.089,0,18.698-3.09,25.837-9.273
          c7.139-6.188,10.712-14.236,10.712-24.126V198.144l83.938,83.651c6.848,7.231,15.413,10.855,25.7,10.855
          c10.082,0,18.747-3.624,25.975-10.855l21.409-21.409c7.043-7.426,10.567-15.988,10.567-25.693
          C444.819,224.795,441.295,216.134,434.252,208.708z"/>
      </g>
      </svg>
    </button>
    <script nomodule src="/assets/js/bundles/index.js"></script>
  </body>
</html>
